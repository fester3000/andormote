// Generated from AndroCode.g4 by ANTLR 4.2.2

    package pl.fester3k.antlr.androCode;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AndroCodeLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__20=1, T__19=2, T__18=3, T__17=4, T__16=5, T__15=6, T__14=7, T__13=8, 
		T__12=9, T__11=10, T__10=11, T__9=12, T__8=13, T__7=14, T__6=15, T__5=16, 
		T__4=17, T__3=18, T__2=19, T__1=20, T__0=21, K_INT_TYPE=22, K_STRING_TYPE=23, 
		K_VOID_TYPE=24, K_BOOLEAN_TYPE=25, K_DEV_TYPE=26, LIBNAME=27, ID=28, LP=29, 
		RP=30, ADD_OP=31, SUBST_OP=32, MULT_OP=33, DEV_OP=34, POWER_OP=35, EQ_OP=36, 
		NOT_EQ_OP=37, GT_OP=38, LT_OP=39, GTEQ_OP=40, LTEQ_OP=41, INT=42, STRING=43, 
		BOOLEAN=44, NULL=45, LINE_COMMENT=46, COMMENT=47, WS=48;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'use'", "'getDevice'", "'.'", "','", "'setParam'", "'while'", "'for'", 
		"'if'", "'--'", "'return'", "'main'", "'='", "';'", "'{'", "'begin'", 
		"'else'", "'}'", "'end'", "'!'", "'++'", "'elseif'", "'int'", "'String'", 
		"'void'", "'bool'", "'device'", "LIBNAME", "ID", "'('", "')'", "'+'", 
		"'-'", "'*'", "'/'", "'^'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", 
		"INT", "STRING", "BOOLEAN", "'null'", "LINE_COMMENT", "COMMENT", "WS"
	};
	public static final String[] ruleNames = {
		"T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", 
		"T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", 
		"T__3", "T__2", "T__1", "T__0", "K_INT_TYPE", "K_STRING_TYPE", "K_VOID_TYPE", 
		"K_BOOLEAN_TYPE", "K_DEV_TYPE", "LIBNAME", "ID", "LP", "RP", "ADD_OP", 
		"SUBST_OP", "MULT_OP", "DEV_OP", "POWER_OP", "EQ_OP", "NOT_EQ_OP", "GT_OP", 
		"LT_OP", "GTEQ_OP", "LTEQ_OP", "INT", "STRING", "BOOLEAN", "NULL", "ESC", 
		"LOWERCASE_LETTER", "UPPERCASE_LETTER", "DIGIT", "LINE_COMMENT", "COMMENT", 
		"WS"
	};


	public AndroCodeLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AndroCode.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\62\u016a\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7"+
		"\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3"+
		"\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27"+
		"\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31"+
		"\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\34\7\34\u00e6\n\34\f\34\16\34\u00e9\13\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\35\6\35\u00f1\n\35\r\35\16\35\u00f2\3\35\3\35\3\35\3\35\7"+
		"\35\u00f9\n\35\f\35\16\35\u00fc\13\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!"+
		"\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3"+
		"*\3+\3+\3+\7+\u011f\n+\f+\16+\u0122\13+\5+\u0124\n+\3,\3,\3,\7,\u0129"+
		"\n,\f,\16,\u012c\13,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u0139\n-\3.\3"+
		".\3.\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\63"+
		"\7\63\u014d\n\63\f\63\16\63\u0150\13\63\3\63\3\63\3\63\3\63\3\64\3\64"+
		"\3\64\3\64\7\64\u015a\n\64\f\64\16\64\u015d\13\64\3\64\3\64\3\64\3\64"+
		"\3\64\3\65\6\65\u0165\n\65\r\65\16\65\u0166\3\65\3\65\5\u012a\u014e\u015b"+
		"\2\66\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\2_\2a\2c\2e\60g\61i\62\3\2\b\3"+
		"\2\63;\b\2$$^^ddppttvv\3\2c|\3\2C\\\3\2\62;\5\2\13\f\17\17\"\"\u0176\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2"+
		"\2\2\3k\3\2\2\2\5o\3\2\2\2\7y\3\2\2\2\t{\3\2\2\2\13}\3\2\2\2\r\u0086\3"+
		"\2\2\2\17\u008c\3\2\2\2\21\u0090\3\2\2\2\23\u0093\3\2\2\2\25\u0096\3\2"+
		"\2\2\27\u009d\3\2\2\2\31\u00a2\3\2\2\2\33\u00a4\3\2\2\2\35\u00a6\3\2\2"+
		"\2\37\u00a8\3\2\2\2!\u00ae\3\2\2\2#\u00b3\3\2\2\2%\u00b5\3\2\2\2\'\u00b9"+
		"\3\2\2\2)\u00bb\3\2\2\2+\u00be\3\2\2\2-\u00c5\3\2\2\2/\u00c9\3\2\2\2\61"+
		"\u00d0\3\2\2\2\63\u00d5\3\2\2\2\65\u00da\3\2\2\2\67\u00e7\3\2\2\29\u00f0"+
		"\3\2\2\2;\u00fd\3\2\2\2=\u00ff\3\2\2\2?\u0101\3\2\2\2A\u0103\3\2\2\2C"+
		"\u0105\3\2\2\2E\u0107\3\2\2\2G\u0109\3\2\2\2I\u010b\3\2\2\2K\u010e\3\2"+
		"\2\2M\u0111\3\2\2\2O\u0113\3\2\2\2Q\u0115\3\2\2\2S\u0118\3\2\2\2U\u0123"+
		"\3\2\2\2W\u0125\3\2\2\2Y\u0138\3\2\2\2[\u013a\3\2\2\2]\u013f\3\2\2\2_"+
		"\u0142\3\2\2\2a\u0144\3\2\2\2c\u0146\3\2\2\2e\u0148\3\2\2\2g\u0155\3\2"+
		"\2\2i\u0164\3\2\2\2kl\7w\2\2lm\7u\2\2mn\7g\2\2n\4\3\2\2\2op\7i\2\2pq\7"+
		"g\2\2qr\7v\2\2rs\7F\2\2st\7g\2\2tu\7x\2\2uv\7k\2\2vw\7e\2\2wx\7g\2\2x"+
		"\6\3\2\2\2yz\7\60\2\2z\b\3\2\2\2{|\7.\2\2|\n\3\2\2\2}~\7u\2\2~\177\7g"+
		"\2\2\177\u0080\7v\2\2\u0080\u0081\7R\2\2\u0081\u0082\7c\2\2\u0082\u0083"+
		"\7t\2\2\u0083\u0084\7c\2\2\u0084\u0085\7o\2\2\u0085\f\3\2\2\2\u0086\u0087"+
		"\7y\2\2\u0087\u0088\7j\2\2\u0088\u0089\7k\2\2\u0089\u008a\7n\2\2\u008a"+
		"\u008b\7g\2\2\u008b\16\3\2\2\2\u008c\u008d\7h\2\2\u008d\u008e\7q\2\2\u008e"+
		"\u008f\7t\2\2\u008f\20\3\2\2\2\u0090\u0091\7k\2\2\u0091\u0092\7h\2\2\u0092"+
		"\22\3\2\2\2\u0093\u0094\7/\2\2\u0094\u0095\7/\2\2\u0095\24\3\2\2\2\u0096"+
		"\u0097\7t\2\2\u0097\u0098\7g\2\2\u0098\u0099\7v\2\2\u0099\u009a\7w\2\2"+
		"\u009a\u009b\7t\2\2\u009b\u009c\7p\2\2\u009c\26\3\2\2\2\u009d\u009e\7"+
		"o\2\2\u009e\u009f\7c\2\2\u009f\u00a0\7k\2\2\u00a0\u00a1\7p\2\2\u00a1\30"+
		"\3\2\2\2\u00a2\u00a3\7?\2\2\u00a3\32\3\2\2\2\u00a4\u00a5\7=\2\2\u00a5"+
		"\34\3\2\2\2\u00a6\u00a7\7}\2\2\u00a7\36\3\2\2\2\u00a8\u00a9\7d\2\2\u00a9"+
		"\u00aa\7g\2\2\u00aa\u00ab\7i\2\2\u00ab\u00ac\7k\2\2\u00ac\u00ad\7p\2\2"+
		"\u00ad \3\2\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7n\2\2\u00b0\u00b1\7u\2"+
		"\2\u00b1\u00b2\7g\2\2\u00b2\"\3\2\2\2\u00b3\u00b4\7\177\2\2\u00b4$\3\2"+
		"\2\2\u00b5\u00b6\7g\2\2\u00b6\u00b7\7p\2\2\u00b7\u00b8\7f\2\2\u00b8&\3"+
		"\2\2\2\u00b9\u00ba\7#\2\2\u00ba(\3\2\2\2\u00bb\u00bc\7-\2\2\u00bc\u00bd"+
		"\7-\2\2\u00bd*\3\2\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0\7n\2\2\u00c0\u00c1"+
		"\7u\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4\7h\2\2\u00c4"+
		",\3\2\2\2\u00c5\u00c6\7k\2\2\u00c6\u00c7\7p\2\2\u00c7\u00c8\7v\2\2\u00c8"+
		".\3\2\2\2\u00c9\u00ca\7U\2\2\u00ca\u00cb\7v\2\2\u00cb\u00cc\7t\2\2\u00cc"+
		"\u00cd\7k\2\2\u00cd\u00ce\7p\2\2\u00ce\u00cf\7i\2\2\u00cf\60\3\2\2\2\u00d0"+
		"\u00d1\7x\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3\7k\2\2\u00d3\u00d4\7f\2\2"+
		"\u00d4\62\3\2\2\2\u00d5\u00d6\7d\2\2\u00d6\u00d7\7q\2\2\u00d7\u00d8\7"+
		"q\2\2\u00d8\u00d9\7n\2\2\u00d9\64\3\2\2\2\u00da\u00db\7f\2\2\u00db\u00dc"+
		"\7g\2\2\u00dc\u00dd\7x\2\2\u00dd\u00de\7k\2\2\u00de\u00df\7e\2\2\u00df"+
		"\u00e0\7g\2\2\u00e0\66\3\2\2\2\u00e1\u00e6\5_\60\2\u00e2\u00e6\5a\61\2"+
		"\u00e3\u00e6\5c\62\2\u00e4\u00e6\7a\2\2\u00e5\u00e1\3\2\2\2\u00e5\u00e2"+
		"\3\2\2\2\u00e5\u00e3\3\2\2\2\u00e5\u00e4\3\2\2\2\u00e6\u00e9\3\2\2\2\u00e7"+
		"\u00e5\3\2\2\2\u00e7\u00e8\3\2\2\2\u00e8\u00ea\3\2\2\2\u00e9\u00e7\3\2"+
		"\2\2\u00ea\u00eb\7\60\2\2\u00eb\u00ec\7c\2\2\u00ec\u00ed\7p\2\2\u00ed"+
		"\u00ee\7f\2\2\u00ee8\3\2\2\2\u00ef\u00f1\5_\60\2\u00f0\u00ef\3\2\2\2\u00f1"+
		"\u00f2\3\2\2\2\u00f2\u00f0\3\2\2\2\u00f2\u00f3\3\2\2\2\u00f3\u00fa\3\2"+
		"\2\2\u00f4\u00f9\5_\60\2\u00f5\u00f9\5a\61\2\u00f6\u00f9\5c\62\2\u00f7"+
		"\u00f9\7a\2\2\u00f8\u00f4\3\2\2\2\u00f8\u00f5\3\2\2\2\u00f8\u00f6\3\2"+
		"\2\2\u00f8\u00f7\3\2\2\2\u00f9\u00fc\3\2\2\2\u00fa\u00f8\3\2\2\2\u00fa"+
		"\u00fb\3\2\2\2\u00fb:\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fd\u00fe\7*\2\2\u00fe"+
		"<\3\2\2\2\u00ff\u0100\7+\2\2\u0100>\3\2\2\2\u0101\u0102\7-\2\2\u0102@"+
		"\3\2\2\2\u0103\u0104\7/\2\2\u0104B\3\2\2\2\u0105\u0106\7,\2\2\u0106D\3"+
		"\2\2\2\u0107\u0108\7\61\2\2\u0108F\3\2\2\2\u0109\u010a\7`\2\2\u010aH\3"+
		"\2\2\2\u010b\u010c\7?\2\2\u010c\u010d\7?\2\2\u010dJ\3\2\2\2\u010e\u010f"+
		"\7#\2\2\u010f\u0110\7?\2\2\u0110L\3\2\2\2\u0111\u0112\7@\2\2\u0112N\3"+
		"\2\2\2\u0113\u0114\7>\2\2\u0114P\3\2\2\2\u0115\u0116\7@\2\2\u0116\u0117"+
		"\7?\2\2\u0117R\3\2\2\2\u0118\u0119\7>\2\2\u0119\u011a\7?\2\2\u011aT\3"+
		"\2\2\2\u011b\u0124\7\62\2\2\u011c\u0120\t\2\2\2\u011d\u011f\5c\62\2\u011e"+
		"\u011d\3\2\2\2\u011f\u0122\3\2\2\2\u0120\u011e\3\2\2\2\u0120\u0121\3\2"+
		"\2\2\u0121\u0124\3\2\2\2\u0122\u0120\3\2\2\2\u0123\u011b\3\2\2\2\u0123"+
		"\u011c\3\2\2\2\u0124V\3\2\2\2\u0125\u012a\7$\2\2\u0126\u0129\5]/\2\u0127"+
		"\u0129\13\2\2\2\u0128\u0126\3\2\2\2\u0128\u0127\3\2\2\2\u0129\u012c\3"+
		"\2\2\2\u012a\u012b\3\2\2\2\u012a\u0128\3\2\2\2\u012b\u012d\3\2\2\2\u012c"+
		"\u012a\3\2\2\2\u012d\u012e\7$\2\2\u012eX\3\2\2\2\u012f\u0130\7v\2\2\u0130"+
		"\u0131\7t\2\2\u0131\u0132\7w\2\2\u0132\u0139\7g\2\2\u0133\u0134\7h\2\2"+
		"\u0134\u0135\7c\2\2\u0135\u0136\7n\2\2\u0136\u0137\7u\2\2\u0137\u0139"+
		"\7g\2\2\u0138\u012f\3\2\2\2\u0138\u0133\3\2\2\2\u0139Z\3\2\2\2\u013a\u013b"+
		"\7p\2\2\u013b\u013c\7w\2\2\u013c\u013d\7n\2\2\u013d\u013e\7n\2\2\u013e"+
		"\\\3\2\2\2\u013f\u0140\7^\2\2\u0140\u0141\t\3\2\2\u0141^\3\2\2\2\u0142"+
		"\u0143\t\4\2\2\u0143`\3\2\2\2\u0144\u0145\t\5\2\2\u0145b\3\2\2\2\u0146"+
		"\u0147\t\6\2\2\u0147d\3\2\2\2\u0148\u0149\7\61\2\2\u0149\u014a\7\61\2"+
		"\2\u014a\u014e\3\2\2\2\u014b\u014d\13\2\2\2\u014c\u014b\3\2\2\2\u014d"+
		"\u0150\3\2\2\2\u014e\u014f\3\2\2\2\u014e\u014c\3\2\2\2\u014f\u0151\3\2"+
		"\2\2\u0150\u014e\3\2\2\2\u0151\u0152\7\f\2\2\u0152\u0153\3\2\2\2\u0153"+
		"\u0154\b\63\2\2\u0154f\3\2\2\2\u0155\u0156\7\61\2\2\u0156\u0157\7,\2\2"+
		"\u0157\u015b\3\2\2\2\u0158\u015a\13\2\2\2\u0159\u0158\3\2\2\2\u015a\u015d"+
		"\3\2\2\2\u015b\u015c\3\2\2\2\u015b\u0159\3\2\2\2\u015c\u015e\3\2\2\2\u015d"+
		"\u015b\3\2\2\2\u015e\u015f\7,\2\2\u015f\u0160\7\61\2\2\u0160\u0161\3\2"+
		"\2\2\u0161\u0162\b\64\2\2\u0162h\3\2\2\2\u0163\u0165\t\7\2\2\u0164\u0163"+
		"\3\2\2\2\u0165\u0166\3\2\2\2\u0166\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167"+
		"\u0168\3\2\2\2\u0168\u0169\b\65\2\2\u0169j\3\2\2\2\20\2\u00e5\u00e7\u00f2"+
		"\u00f8\u00fa\u0120\u0123\u0128\u012a\u0138\u014e\u015b\u0166\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}